'use strict';

var Runtime = require('../runtime');

var runtime = new Runtime();

var add = runtime.createSlot();
runtime.setSlotValue(add, runtime.primitives.add, 0);

var initialDateNow = Date.now();

var inputA = runtime.createSlot();
runtime.setSlotValue(inputA, 0, 0);
var inputB = runtime.createSlot();
runtime.setSlotValue(inputB, 0, 0);

var finalOutput = runtime.createSlot();

document.addEventListener('mousemove', function(e) {
  var t = 0.001*(Date.now() - initialDateNow);
  runtime.setSlotValue(inputA, e.clientX||e.pageX, t);
  runtime.setSlotValue(inputB, e.clientY||e.pageY, t);

  runtime.runUntilTime(t);
  console.log('output is now', runtime.getSlotValue(finalOutput));
}, false);

function main(runtime, startTime, argSlots, outputSlot, baseTopoOrder) {
  if (argSlots.length !== 0) {
    throw new Error('called with wrong number of arguments');
  }

  // add application for final output (slot already created)
  var $_unappOut = runtime.addApplication(startTime, add, [inputA, inputB], outputSlot, baseTopoOrder+'1');

  // create and return deactivator closure. it needs to undo any applications
  return function() {
    $_unappOut();
  };
}

// assume main activator definition has been generated by compiler
main(runtime, 0, [], finalOutput, '');

console.log('initial output is', runtime.getSlotValue(finalOutput));

/*
while (true) {
  // TODO: (optionally) modify input values
  // TODO: determine next time to run until
  runtime.runUntilTime(untilTime);
  // TODO: witness changes to finalOutput value
}
*/
